# 0904_polymorphism
# 多態性。ポリモーフィズム。
# オブジェクト指向３大要素の３つめ。
# 同一のメッセージで、
# インスタンスに応じて異なる動作をすること。
# 一言で言うと、同じメソッド名で
# 呼び出すけど、実体によって動作が異なる。
class Cat:
    def naku(self):
        print("meow")

class Dog:
    def naku(self):
        print("bark")

import random
r = random.randint(0, 1)
print(r)

animal = None
if r == 0:
    animal = Cat()
else:
    animal = Dog()

animal.naku()

# 同一メッセージ(メソッド呼び出し)で、
# インスタンスによって、異なる動作をする。

# ダックタイピング
# 「もしアヒルのように歩き、
# アヒルのように鳴くなら、
# それはアヒルに違いない」
# という考え方に基づいた、
# 動的型付け言語での多態性の実現方法の一つ。

# ダックタイピングは、
# スクリプト言語にて実現可能。
# 要は、それっぽい同一のメソッド名を
# 定義すればOKという考え方。
# 静的に型が管理されるコンパイラ言語では、
# 継承を用いて多態性を実現する。